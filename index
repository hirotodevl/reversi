function renderBoard() {
  boardEl.innerHTML = "";
  let hasValidMove = false;

  for (let y = 0; y < 8; y++) {
    for (let x = 0; x < 8; x++) {
      const cell = document.createElement("div");
      cell.className = "cell";

      // 置ける場所をハイライト
      if (board[y][x] === null && isValidMove(x, y, currentPlayer)) {
        cell.style.background = "#00cc66"; // ハイライト色
        hasValidMove = true;
      }

      if (board[y][x]) {
        const disc = document.createElement("div");
        disc.className = board[y][x];
        cell.appendChild(disc);
      }

      cell.addEventListener("click", () => handleClick(x, y));
      boardEl.appendChild(cell);
    }
  }

  if (!hasValidMove) {
    currentPlayer = currentPlayer === "black" ? "white" : "black";
    infoEl.innerText = `${currentPlayer === "black" ? "黒" : "白"}のターン（パス）`;
  } else {
    infoEl.innerText = `${currentPlayer === "black" ? "黒" : "白"}のターン`;
  }

  checkGameEnd();
}

function checkGameEnd() {
  let black = 0, white = 0;
  let hasEmpty = false;
  for (let row of board) {
    for (let cell of row) {
      if (cell === "black") black++;
      if (cell === "white") white++;
      if (cell === null) hasEmpty = true;
    }
  }
  if (!hasEmpty || (!hasValidMoveFor("black") && !hasValidMoveFor("white"))) {
    let winner = black > white ? "黒" : black < white ? "白" : "引き分け";
    infoEl.innerText = `ゲーム終了！ 黒: ${black} 白: ${white} → 勝者: ${winner}`;
  }
}

function hasValidMoveFor(player) {
  for (let y = 0; y < 8; y++) {
    for (let x = 0; x < 8; x++) {
      if (board[y][x] === null && isValidMove(x, y, player)) return true;
    }
  }
  return false;
}
